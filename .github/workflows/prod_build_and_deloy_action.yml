# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions: write-all

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: add secrets
        run: |
          pwd
          sed -i 's|<DATABASE_PASSWORD>|${{ secrets.DATABASE_PASSWORD }}|' src/main/resources/application-prod.properties
          sed -i 's|<JWT_SECRET>|${{ secrets.JWT_SECRET }}|' src/main/resources/application-prod.properties
          sed -i 's|<JWT_SECRET>|${{ secrets.JWT_SECRET }}|' src/main/resources/application-prod.properties
          sed -i 's|<MAIL_PASSWORD>|${{ secrets.MAIL_PASSWORD }}|' src/main/resources/application-prod.properties
          sed -i 's|<ENDPOINT_ETHEREUM>|${{ secrets.ENDPOINT_ETHEREUM }}|' src/main/resources/application-prod.properties
          sed -i 's|<AWS_ACCESS_KEY_ID>|${{ secrets.AWS_ACCESS_KEY_ID }}|' src/main/resources/application-prod.properties
          sed -i 's|<AWS_SECRET_ACCESS_KEY>|${{ secrets.AWS_SECRET_ACCESS_KEY }}|' src/main/resources/application-prod.properties
          cat src/main/resources/application-prod.properties
        

      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'gradle'
      - run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./tag/git_update_tag_prod.sh -v patch
      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nefentus-image
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 
          sed -i 's|<IMAGE>|'"$ECR_REGISTRY"'/'"$ECR_REPOSITORY"':'"$IMAGE_TAG"'|' k8s/deployment-nefentus-app.yaml

      - name: Update Kubeconfig with short-lived credentials
        run: aws eks update-kubeconfig --region eu-central-1 --name nefentus-production

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f k8s/deployment-nefentus-app.yaml